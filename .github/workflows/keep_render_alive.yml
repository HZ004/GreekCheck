name: Keep Render Alive Ping

on:
  schedule:
    - cron: '*/3 3-10 * * *'  # Every 3 minutes between 3 AM and 10 AM UTC
  workflow_dispatch:

jobs:
  keep-alive-ping:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run inline keep-alive ping script
        env:
          SERVICE_URL: ${{ secrets.SERVICE_URL }}
        run: |
          python -c "
                    import os
                    import datetime
                    import requests
                    import sys
                    
                    SERVICE_URL = os.getenv('SERVICE_URL')
                    if not SERVICE_URL:
                        print('Error: SERVICE_URL environment variable not set.')
                        sys.exit(1)
                    
                    IST_OFFSET = datetime.timezone(datetime.timedelta(hours=5, minutes=30))
                    
                    def keep_alive_ping():
                        now = datetime.datetime.now(IST_OFFSET)
                        print(f'Pinging service at IST time {now.isoformat()}')
                        try:
                            response = requests.get(SERVICE_URL, timeout=10)
                            print(f'Ping status code: {response.status_code}')
                        except Exception as e:
                            print(f'Ping failed: {e}')
                    
                    def main():
                        now = datetime.datetime.now(IST_OFFSET)
                        hour, minute = now.hour, now.minute
                        print(f'Script run at {now.isoformat()}')
                        if (hour == 9 and minute >= 10) or (10 <= hour < 15) or (hour == 15 and minute <= 40):
                            keep_alive_ping()
                        else:
                            print(f'Outside active ping hours at {now.isoformat()}')
                    
                    if __name__ == '__main__':
                        main()
                    "
